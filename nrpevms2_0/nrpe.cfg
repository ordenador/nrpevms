#############################################################################
# Sample NRPE Config File
# Written by: Ethan Galstad (nagios@nagios.org)
#
# Last Modified: 12-30-2002
#
# NOTES:
# This is a sample configuration file for the NRPE daemon.  It needs to be
# located on the remote host that is running the NRPE daemon, not the host
# from which the check_nrpe client is being executed.
#############################################################################



# PORT NUMBER
# Port number we should wait for connections on.
# NOTE: This must be a non-priviledged port (i.e. > 1024).
# NOTE: This option is ignored if NRPE is running under either inetd or xinetd

server_port=5666



# SERVER ADDRESS
# Address that nrpe should bind to in case there are more than one interface
# and you do not want nrpe to bind on all interfaces.
# NOTE: This option is ignored if NRPE is running under either inetd or xinetd

#server_address=10.0.0.1



# ALLOWED HOST ADDRESSES
# This is a comma-delimited list of IP address of hosts that are allowed
# to talk to the NRPE daemon.
#
# NOTE: The daemon only does rudimentary checking of the client's IP
#       address.  I would highly recommend adding entries in your
#       /etc/hosts.allow file to allow only the specified host to connect
#       to the port you are running this daemon on.
#
# NOTE: This option is ignored if NRPE is running under either inetd or xinetd

allowed_hosts=108.0.1.158

# DEBUGGING OPTION
# This option determines whether or not debugging messages are logged to the
# syslog facility.
# Values: 0=debugging off, 1=debugging on

debug=0



# COMMAND TIMEOUT
# This specifies the maximum number of seconds that the NRPE daemon will
# allow plugins to finish executing before killing them off.

command_timeout=60

dont_blame_nrpe=1

# COMMAND DEFINITIONS
# Command definitions that this daemon will run.  Definitions
# are in the following format:
#
# command[<command_name>]=<command_line>
#
# When the daemon receives a request to return the results of <command_name>
# it will execute the command specified by the <command_line> argument.
#
# Unlike Nagios, the command line cannot contain macros - it must be
# typed exactly as it should be executed.
#
# Note: Any plugins that are used in the command lines must reside
# on the machine that this daemon is running on!
# Note that you will have to modify the definitions below
# to match the argument format the plugins expect.  Remember, these are
# examples only!

# VMS Specif:
#    Note the use of the "@" for the DCL procedures. This are executed
#   by the user running the auxiliary server. You may need to check the
#   privileges of the account in sysuaf and maybe the quotas.
#    All this plug-ins are provided in the scripts directory.
#    $ symbol is for parameters. So be sure to use double $ ($$) for logical
#   names, device names and directories.
#

command[check_test]=@nrpe$$scripts:check_test.com
command[test0]=@nrpe$$scripts:test0.com
command[test1]=@nrpe$$scripts:test1.com
command[test2]=@nrpe$$scripts:test2.com
command[check_testp]=@nrpe$$scripts:check_testp.com $ARG1$
command[check_disk]=@nrpe$$scripts:check_disk.com $ARG1$
command[check_dkc100]=@nrpe$scripts:check_disk.com dkc100
command[check_dkc300]=@nrpe$scripts:check_disk.com dkc300
command[check_memory]=@nrpe$$scripts:check_memory.com
command[check_system]=@nrpe$$scripts:check_system.com $ARG1$
command[check_cpu]=@nrpe$$scripts:check_system.com CPU
command[check_allcpu]=@nrpe$$scripts:check_system.com ALLCPU
command[check_prc]=@nrpe$$scripts:check_system.com PRC
command[check_pfr]=@nrpe$$scripts:check_system.com PFR
command[check_prr]=@nrpe$$scripts:check_system.com PRR
command[check_fpl]=@nrpe$$scripts:check_system.com FPL
command[check_mpl]=@nrpe$$scripts:check_system.com MPL
command[check_dio]=@nrpe$$scripts:check_system.com DIO
command[check_bio]=@nrpe$$scripts:check_system.com BIO
command[check_mario]=@nrpe$$scripts:check_mario.com